{"version":3,"file":"static/js/595.1c164e6b.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.jsx","components/UserList/User/User.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/UserList/UserList.jsx","components/Filter/Filter.jsx","../node_modules/react-bootstrap/esm/CardGroup.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","components/UserEditor/UserEditor.jsx","pages/UsersView.jsx","hooks/useToggle.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Form, Button } from 'react-bootstrap';\nimport { Box } from 'components/Box';\n\nexport const UserForm = ({ users, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'email':\n        setEmail(e.currentTarget.value);\n        break;\n      case 'password':\n        setPassword(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (users.find(user => user.email === email)) {\n      toast.warning(`${email} is already in users!`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return false;\n    }\n\n    onSubmit({ name, email, password });\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>ПІБ студента</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(([' -][a-zA-Zа-яА-Яа-їґЄ-ЯҐ ])?[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\n          <Form.Label>Email студента</Form.Label>\n          <Form.Control\n            type=\"mail\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            pattern=\"^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\n          <Form.Label>Паспорт студента</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"password\"\n            minLength=\"8\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Додати в базу\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nUserForm.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.exact({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      password: PropTypes.string.isRequired,\n      owner: PropTypes.exact({\n        _id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n      }),\n    })\n  ).isRequired,\n};\n","import { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useRemoveUserMutation } from 'redux/users/users-api';\n\nexport const User = ({ id, name, email, password, open, getUserById }) => {\n  const [removeUser, { isLoading: isDeleting }] = useRemoveUserMutation();\n  return (\n    <div>\n      <p className=\"mb-2\">\n        <b>Name:</b> {name}\n        <br />\n      </p>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        type=\"button\"\n        onClick={() => {\n          getUserById(id);\n          open();\n        }}\n      >\n        Докладно\n      </Button>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => {\n          removeUser(id);\n        }}\n      >\n        Видалити\n      </Button>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { User } from 'components/UserList/User/User';\nimport PropTypes from 'prop-types';\nimport { Container, ListGroup } from 'react-bootstrap';\n\nexport const UserList = ({ users, open, getUserById }) => {\n  return (\n    <Container>\n      <ListGroup variant=\"flush\">\n        {users.map(user => (\n          <ListGroup.Item key={user._id}>\n            <User\n              id={user._id}\n              name={user.name}\n              email={user.email}\n              password={user.password}\n              open={open}\n              getUserById={getUserById}\n            ></User>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </Container>\n  );\n};\n\nUserList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.exact({\n      _id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      password: PropTypes.string.isRequired,\n      owner: PropTypes.exact({\n        _id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n      }),\n    })\n  ).isRequired,\n};\n","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nexport const Filter = ({ name, onChange }) => {\n  return (\n    <Box>\n      <Form>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>Search</Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            name=\"find\"\n            value={name}\n            onChange={onChange}\n          />\n        </Form.Group>\n      </Form>\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","// import { Box } from 'components/Box';\nimport { useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport { Card, CardGroup, Button, Form } from 'react-bootstrap';\n\nexport const UserEditor = ({ users, user, onSubmit, close }) => {\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState(user.password);\n  const [cardID, setCardID] = useState(user._id);\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'email':\n        setEmail(e.currentTarget.value);\n        break;\n      case 'password':\n        setPassword(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const id = user._id;\n    if (users.find(user => user.email === email && user._id !== id)) {\n      toast.warning(`${email} is already in users!`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return false;\n    }\n\n    onSubmit({ id: user._id, name, email, password });\n\n    setName('');\n    setEmail('');\n    setPassword('');\n    setCardID('');\n    close();\n  };\n  return (\n    <CardGroup\n      style={{\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: '#fff',\n      }}\n    >\n      <Card style={{ padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n            <Form.Label>ПІБ студента</Form.Label>\n\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(([' -][a-zA-Zа-яА-Яа-їґЄ-ЯҐ ])?[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\n            <Form.Label>Email студента</Form.Label>\n            <Form.Control\n              type=\"mail\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              pattern=\"^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\n            <Form.Label>Паспорт студента</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"password\"\n              minLength=\"8\"\n              value={password}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\n            <Form.Label>Персональний ID</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"cardid\"\n              minLength=\"6\"\n              value={cardID}\n              disabled\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Зберегти зміни\n          </Button>\n          <Button\n            variant=\"primary\"\n            style={{ marginLeft: '30px' }}\n            type=\"button\"\n            onClick={() => {\n              close();\n            }}\n          >\n            Повернутись\n          </Button>\n        </Form>\n      </Card>\n    </CardGroup>\n  );\n};\n","import { useState } from 'react';\n\nimport { UserForm } from 'components/UserForm/UserForm';\nimport { UserList } from 'components/UserList/UserList';\nimport { Filter } from 'components/Filter/Filter';\nimport { UserEditor } from 'components/UserEditor/UserEditor';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/userlistSlice';\n\nimport {\n  useAddUserMutation,\n  useGetAllUsersQuery,\n  useUpdateUserMutation,\n} from 'redux/users/users-api';\nimport { Card, CardGroup, Container } from 'react-bootstrap';\n\nimport { useToggle } from 'hooks/useToggle';\n\nconst UsersView = () => {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({});\n  const { isOpen, open, close } = useToggle();\n\n  const filter = useSelector(getFilter);\n  const {\n    data: users,\n    isLoading,\n    isSuccess,\n  } = useGetAllUsersQuery('', {\n    refetchOnMountOrArgChange: true,\n  });\n\n  const [addUser] = useAddUserMutation();\n\n  const [updateUser] = useUpdateUserMutation();\n\n  //get users list by filter\n  const getFilteredUsers = () => {\n    if (filter.trim()) {\n      return users.filter(user => {\n        return user.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    } else return users;\n  };\n\n  const getUserById = id => {\n    setUser(users.find(user => user._id === id));\n  };\n\n  //redux actions\n  const handleAddUser = ({ name, email, password }) => {\n    addUser({ name, email, password });\n  };\n\n  const handleUpdateUser = ({ id, name, email, password }) => {\n    updateUser({ userId: id, name, email, password });\n  };\n\n  const updateFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  //------------------\n\n  const filteredUsers = getFilteredUsers();\n\n  return (\n    <Container\n      className=\"mt-2\"\n      style={{\n        position: 'relative',\n      }}\n    >\n      {isOpen && (\n        <UserEditor\n          users={users}\n          user={user}\n          close={close}\n          onSubmit={handleUpdateUser}\n        />\n      )}\n\n      {!isLoading && isSuccess && (\n        <CardGroup>\n          <Card>\n            <Card.Body>\n              <Card.Title>New user</Card.Title>\n              <UserForm users={users} onSubmit={handleAddUser}></UserForm>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>Your users</Card.Title>\n              <Filter name={filter} onChange={updateFilter}></Filter>\n              <UserList\n                users={filteredUsers}\n                open={open}\n                getUserById={getUserById}\n              />\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      )}\n    </Container>\n  );\n};\n\nexport default UsersView;\n","import { useState } from 'react';\n\nexport const useToggle = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n  const toggle = () => setIsOpen(isOpen => !isOpen);\n\n  return { isOpen, open, close, toggle };\n};"],"names":["UserForm","users","onSubmit","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","currentTarget","value","Box","Form","preventDefault","find","user","toast","position","className","controlId","type","onChange","pattern","title","required","minLength","Button","variant","User","id","open","getUserById","useRemoveUserMutation","removeUser","isDeleting","isLoading","size","onClick","disabled","ListGroupItem","React","ref","bsPrefix","active","eventKey","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","UserList","Container","map","_id","Filter","createWithBsPrefix","CardImg","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","UserEditor","close","cardID","setCardID","CardGroup","style","height","width","zIndex","backgroundColor","padding","marginLeft","dispatch","useDispatch","setUser","isOpen","setIsOpen","toggle","useToggle","filter","useSelector","getFilter","useGetAllUsersQuery","refetchOnMountOrArgChange","data","isSuccess","useAddUserMutation","addUser","useUpdateUserMutation","updateUser","filteredUsers","trim","toLowerCase","includes","userId","setFilter","target"],"sourceRoot":""}